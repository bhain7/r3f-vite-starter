/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { Canvas, useFrame } from "@react-three/fiber";
import {
  useGLTF,
  useTexture,
  AccumulativeShadows,
  RandomizedLight,
  Decal,
  Environment,
  Center,
} from "@react-three/drei";
import { easing } from "maath";
import { useSnapshot } from "valtio";
import { state } from "./store";
import { PlaneGeometry, MeshBasicMaterial } from "three"; // Import BoxGeometry
import * as THREE from "three";

export function Mug(props) {
  const { nodes, materials } = useGLTF("/mug.glb");
  const snap = useSnapshot(state);
  const mugMaterialRef = useRef();
  const overlayMaterialRef = useRef();
   const selectedImage = props.selectedImage;

   const texture = useTexture(selectedImage || "./three2.png");
  useFrame((state, delta) => {
    if (mugMaterialRef.current) {
      // Set the color directly from the state
      mugMaterialRef.current.color.set(snap.color);
    }
  });

  return (
    <group {...props} dispose={null} position={[0, -0.24, 0.15]}>
   
        <mesh
          position={[0.01, 0.25, 0.25]}
          scale={[0.3, 0.3, 0.3]}
          ref={overlayMaterialRef}
          castShadow
          receiveShadow
          geometry={new THREE.PlaneGeometry(1, 1)}
          material={
            new THREE.MeshBasicMaterial({
              color: 0xffffff,
              map: texture,
              transparent: true,
            })
          }
          // Adjust the position along the z-axis
        />

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mug001.geometry}
        material={materials["Mug.001"]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={5.967}
      >
        <meshStandardMaterial
          ref={mugMaterialRef}
          attach="material"
          color={snap.color}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/mug.glb");
